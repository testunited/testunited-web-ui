{"ast":null,"code":"var _jsxFileName = \"/workspace/testunited/testunited-web-ui/src/components/TestCaseInfo.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport TestRunList from './TestRunList';\nexport class TestCaseInfo extends Component {\n  constructor(...args) {\n    super(...args);\n    this.baseUrl = \"http://web-api.int.testunited.minikube.local\";\n    this.state = {\n      testCase: {},\n      testRuns: []\n    };\n    this.labelStyle = {\n      textDecoration: 'bold'\n    };\n  }\n\n  componentDidMount() {\n    axios.get(this.baseUrl + '/testcases/' + this.props.match.params.testCaseId).then(res => this.setState({\n      testCase: res.data\n    }));\n  }\n\n  render() {\n    const testCase = this.state.testCase;\n    return React.createElement(\"div\", {\n      style: {\n        textAlign: 'left'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: labelStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"Id:\\xA0\"), \" \", testCase.id, \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }), \"Test Source Id: \", testCase.testSourceId, \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), \"Name: \", testCase.name, \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }));\n  }\n\n}\nexport default TestCaseInfo;","map":{"version":3,"sources":["/workspace/testunited/testunited-web-ui/src/components/TestCaseInfo.js"],"names":["React","Component","PropTypes","Link","axios","TestRunList","TestCaseInfo","baseUrl","state","testCase","testRuns","labelStyle","textDecoration","componentDidMount","get","props","match","params","testCaseId","then","res","setState","data","render","textAlign","id","testSourceId","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,OAAO,MAAMC,YAAN,SAA2BL,SAA3B,CAAqC;AAAA;AAAA;AAAA,SACxCM,OADwC,GAC9B,8CAD8B;AAAA,SAGxCC,KAHwC,GAGhC;AACJC,MAAAA,QAAQ,EAAE,EADN;AAEJC,MAAAA,QAAQ,EAAE;AAFN,KAHgC;AAAA,SAaxCC,UAbwC,GAa3B;AACTC,MAAAA,cAAc,EAAC;AADN,KAb2B;AAAA;;AAQtCC,EAAAA,iBAAiB,GAAE;AACjBT,IAAAA,KAAK,CAACU,GAAN,CAAU,KAAKP,OAAL,GAAe,aAAf,GAA6B,KAAKQ,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,UAA/D,EACEC,IADF,CACOC,GAAG,IAAI,KAAKC,QAAL,CAAc;AAACZ,MAAAA,QAAQ,EAAEW,GAAG,CAACE;AAAf,KAAd,CADd;AAED;;AAKHC,EAAAA,MAAM,GAAG;AACL,UAAMd,QAAQ,GAAG,KAAKD,KAAL,CAAWC,QAA5B;AACA,WACI;AAAK,MAAA,KAAK,EAAE;AAACe,QAAAA,SAAS,EAAC;AAAX,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,KAAK,EAAEb,UAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,OAC6CF,QAAQ,CAACgB,EADtD,OAC0D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD1D,sBAEqBhB,QAAQ,CAACiB,YAF9B,OAE4C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAF5C,YAGWjB,QAAQ,CAACkB,IAHpB,OAG0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAH1B,CADJ;AAYH;;AA9BuC;AAkC5C,eAAerB,YAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom'\nimport axios from 'axios';\nimport TestRunList from './TestRunList';\n\nexport class TestCaseInfo extends Component {\n    baseUrl = \"http://web-api.int.testunited.minikube.local\"\n\n    state = {\n        testCase: {},\n        testRuns: []\n      }\n    \n      componentDidMount(){\n        axios.get(this.baseUrl + '/testcases/'+this.props.match.params.testCaseId)\n         .then(res => this.setState({testCase: res.data}))\n      }\n\n    labelStyle = {\n        textDecoration:'bold'\n    }\n    render() {\n        const testCase = this.state.testCase;\n        return (\n            <div style={{textAlign:'left'}}>\n                <div style={labelStyle}>Id:&nbsp;</div> {testCase.id} <br/>\n                Test Source Id: {testCase.testSourceId} <br/>\n                Name: {testCase.name} <br/>\n                {/* Result: {result? \"true\": \"false\"} <br/>\n                <div style={{textAlign:\"left\"}}>\n                <TestRunList testRuns={this.state.testRuns}/>\n                </div> */}\n            </div>\n\n        )\n    }\n}\n\n\nexport default TestCaseInfo\n"]},"metadata":{},"sourceType":"module"}