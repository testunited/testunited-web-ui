{"ast":null,"code":"import _defineProperty from \"/workspace/testunited/testunited-web-ui/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/workspace/testunited/testunited-web-ui/src/components/TestCaseInfo.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport TestRunList from './TestRunList';\nimport Config from '../Config';\nexport class TestCaseInfo extends Component {\n  constructor(props) {\n    super(props); //this.state = {value: 'coconut'};\n\n    this.baseUrl = new Config().getApiHost();\n    this.state = {\n      testCase: {},\n      testTargets: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleTargetChange = this.handleTargetChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    axios.get(this.baseUrl + '/testcases/' + this.props.match.params.testCaseId).then(res => this.setState({\n      testCase: res.data\n    }));\n    axios.get(this.baseUrl + '/testtargets').then(res => this.setState({\n      testTargets: res.data\n    })); //.then(res => console.log(res.data));\n  }\n\n  handleSubmit(event) {\n    axios.post(this.baseUrl + '/testcases', this.state.testCase);\n    event.preventDefault();\n  }\n\n  handleChange(event) {\n    var testCase = _objectSpread({}, this.state.testCase);\n\n    testCase.name = event.target.value;\n    this.setState({\n      testCase\n    });\n  }\n\n  handleTargetChange(event) {\n    var testCase = _objectSpread({}, this.state.testCase);\n\n    testCase.testTarget = {\n      id: event.target.value\n    };\n    this.setState({\n      testCase\n    });\n  }\n\n  render() {\n    //const testCase = this.state.testCase;\n    const labelStyle = {\n      fontWeight: 'bold'\n    };\n    console.log(this.state.testTargets);\n    return React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        textAlign: 'left'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: labelStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Id:\\xA0\"), \" \", this.state.testCase.id, \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      style: labelStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Test Source Id:\\xA0\"), \" \", this.state.testCase.testSourceId, \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      style: labelStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Name:\\xA0\"), \" \", React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.testCase.name,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(\"select\", {\n      name: \"testTarget\",\n      onChange: this.handleTargetChange,\n      value: this.state.testCase.testTarget != null ? this.state.testCase.testTarget.id : null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, this.state.testTargets.map(testTarget => {\n      return React.createElement(\"option\", {\n        value: testTarget.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, testTarget.microservice);\n    })), React.createElement(\"input\", {\n      type: \"submit\",\n      name: \"submit\",\n      value: \"Save\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    })));\n  }\n\n}\nexport default TestCaseInfo;","map":{"version":3,"sources":["/workspace/testunited/testunited-web-ui/src/components/TestCaseInfo.js"],"names":["React","Component","PropTypes","Link","axios","TestRunList","Config","TestCaseInfo","constructor","props","baseUrl","getApiHost","state","testCase","testTargets","handleChange","bind","handleTargetChange","handleSubmit","componentDidMount","get","match","params","testCaseId","then","res","setState","data","event","post","preventDefault","name","target","value","testTarget","id","render","labelStyle","fontWeight","console","log","textAlign","testSourceId","map","microservice"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom'\nimport axios from 'axios';\nimport TestRunList from './TestRunList';\nimport Config from '../Config';\n\nexport class TestCaseInfo extends Component {\n    baseUrl = new Config().getApiHost();\n    state = {\n        testCase: {},\n        testTargets:[]\n      }\n      constructor(props) {\n        super(props);\n        //this.state = {value: 'coconut'};\n    \n        this.handleChange = this.handleChange.bind(this);\n        this.handleTargetChange = this.handleTargetChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n      }\n    \n    componentDidMount(){\n        axios.get(this.baseUrl + '/testcases/'+this.props.match.params.testCaseId)\n         .then(res => this.setState({testCase:res.data}));\n        axios.get(this.baseUrl + '/testtargets')\n         .then(res => this.setState({testTargets:res.data}));\n         //.then(res => console.log(res.data));\n    }\n\n    handleSubmit(event) {\n        axios.post(this.baseUrl + '/testcases', this.state.testCase);\n        event.preventDefault();\n    }\n    \n    handleChange(event){\n        var testCase = {...this.state.testCase};\n        testCase.name = event.target.value;\n        this.setState({ testCase});\n    }\n\n    handleTargetChange(event){\n        var testCase = {...this.state.testCase};\n        testCase.testTarget = { id: event.target.value};\n        this.setState({ testCase});\n    }\n    render() {\n        //const testCase = this.state.testCase;\n        const labelStyle = {\n            fontWeight:'bold'\n        };\n        console.log(this.state.testTargets)\n        return (\n            <form onSubmit={this.handleSubmit}>\n                <div style={{textAlign:'left'}}>\n                    <span style={labelStyle}>Id:&nbsp;</span> {this.state.testCase.id} <br/>\n                    <span style={labelStyle}>Test Source Id:&nbsp;</span> {this.state.testCase.testSourceId} <br/>\n                    <span style={labelStyle}>Name:&nbsp;</span> <input type=\"text\" value={this.state.testCase.name} onChange={this.handleChange}></input> <br/>\n                    <select name=\"testTarget\" onChange={this.handleTargetChange} value={this.state.testCase.testTarget != null ? this.state.testCase.testTarget.id:null}>\n                        {this.state.testTargets.map( testTarget => { return (<option value={testTarget.id}>{testTarget.microservice}</option>)})}\n                    </select>\n                    <input type=\"submit\" name=\"submit\" value=\"Save\"/>\n                </div>\n            </form>\n        )\n    }\n}\n\n\nexport default TestCaseInfo\n"]},"metadata":{},"sourceType":"module"}