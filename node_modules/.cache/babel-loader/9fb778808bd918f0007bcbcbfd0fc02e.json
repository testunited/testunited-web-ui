{"ast":null,"code":"import _defineProperty from \"/workspace/testunited/testunited-web-ui/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/workspace/testunited/testunited-web-ui/src/components/TestCase/TestCaseInfo.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\nimport axios from 'axios';\nimport TestRunList from '../TestRun/TestRunList';\nimport Config from '../../Config';\nexport class TestCaseInfo extends Component {\n  constructor(props) {\n    super(props);\n    this.baseUrl = new Config().getApiHost();\n    this.state = {\n      testCase: {},\n      testTargets: [],\n      testGroups: [],\n      redirect: false\n    };\n\n    this.setRedirect = () => {\n      this.setState({\n        redirect: true\n      });\n    };\n\n    this.renderRedirect = () => {\n      if (this.state.redirect) {\n        return React.createElement(Redirect, {\n          to: \"/testcases\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        });\n      }\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleTargetChange = this.handleTargetChange.bind(this);\n    this.handleGroupChange = this.handleGroupChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    axios.get(this.baseUrl + '/testcases/' + this.props.match.params.testCaseId).then(res => this.setState({\n      testCase: res.data\n    }));\n    axios.get(this.baseUrl + '/testtargets').then(res => this.setState({\n      testTargets: res.data\n    }));\n    axios.get(this.baseUrl + '/testgroups').then(res => this.setState({\n      testGroups: res.data\n    }));\n  }\n\n  handleSubmit(event) {\n    axios.post(this.baseUrl + '/testcases', this.state.testCase);\n    event.preventDefault();\n    this.setRedirect();\n  }\n\n  handleChange(event) {\n    var testCase = _objectSpread({}, this.state.testCase);\n\n    testCase.name = event.target.value;\n    this.setState({\n      testCase\n    });\n  }\n\n  handleTargetChange(event) {\n    var testCase = _objectSpread({}, this.state.testCase);\n\n    testCase.testTarget = {\n      id: event.target.value\n    };\n    this.setState({\n      testCase\n    });\n  }\n\n  handleGroupChange(event) {\n    var testCase = _objectSpread({}, this.state.testCase);\n\n    testCase.testGroup = {\n      id: event.target.value\n    };\n    this.setState({\n      testCase\n    });\n  }\n\n  render() {\n    const labelStyle = {\n      fontWeight: 'bold'\n    };\n    return React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, this.renderRedirect(), React.createElement(\"div\", {\n      className: \"divTable\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"divTableRow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"divTableCell\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: labelStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Id:\\xA0\")), React.createElement(\"div\", {\n      className: \"divTableCell\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, this.state.testCase.id)), React.createElement(\"div\", {\n      className: \"divTableRow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"divTableCell\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: labelStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Test Source Id:\\xA0\")), React.createElement(\"div\", {\n      className: \"divTableCell\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, this.state.testCase.testSourceId)), React.createElement(\"div\", {\n      className: \"divTableRow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"divTableCell\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: labelStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Name:\\xA0\")), React.createElement(\"div\", {\n      className: \"divTableCell\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.testCase.name,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"divTableRow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"divTableCell\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: labelStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Test Target:\\xA0\")), React.createElement(\"div\", {\n      className: \"divTableCell\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      name: \"testTarget\",\n      onChange: this.handleTargetChange,\n      value: this.state.testCase.testTarget != null ? this.state.testCase.testTarget.id : null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \" ----- \"), this.state.testTargets.map(testTarget => {\n      return React.createElement(\"option\", {\n        value: testTarget.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, testTarget.microservice);\n    })))), React.createElement(\"div\", {\n      className: \"divTableRow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"divTableCell\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: labelStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Test Group:\\xA0\")), React.createElement(\"div\", {\n      className: \"divTableCell\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      name: \"testGroup\",\n      onChange: this.handleGroupChange,\n      value: this.state.testCase.testGroup != null ? this.state.testCase.testGroup.id : null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \" ----- \"), this.state.testGroups.map(testGroup => {\n      return React.createElement(\"option\", {\n        value: testGroup.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, testGroup.name);\n    })))), React.createElement(\"div\", {\n      className: \"divTableRow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"divTableCell\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"divTableCell\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"submit\",\n      name: \"submit\",\n      value: \"Save\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    })))));\n  }\n\n}\nexport default TestCaseInfo;","map":{"version":3,"sources":["/workspace/testunited/testunited-web-ui/src/components/TestCase/TestCaseInfo.js"],"names":["React","Component","PropTypes","Redirect","axios","TestRunList","Config","TestCaseInfo","constructor","props","baseUrl","getApiHost","state","testCase","testTargets","testGroups","redirect","setRedirect","setState","renderRedirect","handleChange","bind","handleTargetChange","handleGroupChange","handleSubmit","componentDidMount","get","match","params","testCaseId","then","res","data","event","post","preventDefault","name","target","value","testTarget","id","testGroup","render","labelStyle","fontWeight","testSourceId","map","microservice"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom'\nimport axios from 'axios';\nimport TestRunList from '../TestRun/TestRunList';\nimport Config from '../../Config';\n\nexport class TestCaseInfo extends Component {\n  baseUrl = new Config().getApiHost();\n  state = {\n    testCase: {},\n    testTargets: [],\n    testGroups: [],\n    redirect: false\n  }\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleTargetChange = this.handleTargetChange.bind(this);\n    this.handleGroupChange = this.handleGroupChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  setRedirect = () => {\n    this.setState({\n      redirect: true\n    })\n  }\n\n  renderRedirect = () => {\n    if (this.state.redirect) {\n      return <Redirect to='/testcases' />\n    }\n  }\n  componentDidMount() {\n    axios.get(this.baseUrl + '/testcases/' + this.props.match.params.testCaseId)\n      .then(res => this.setState({ testCase: res.data }));\n    axios.get(this.baseUrl + '/testtargets')\n      .then(res => this.setState({ testTargets: res.data }));\n    axios.get(this.baseUrl + '/testgroups')\n      .then(res => this.setState({ testGroups: res.data }));\n  }\n\n  handleSubmit(event) {\n    axios.post(this.baseUrl + '/testcases', this.state.testCase);\n    event.preventDefault();\n    this.setRedirect();\n\n  }\n\n  handleChange(event) {\n    var testCase = { ...this.state.testCase };\n    testCase.name = event.target.value;\n    this.setState({ testCase });\n  }\n\n  handleTargetChange(event) {\n    var testCase = { ...this.state.testCase };\n    testCase.testTarget = { id: event.target.value };\n    this.setState({ testCase });\n  }\n\n  handleGroupChange(event) {\n    var testCase = { ...this.state.testCase };\n    testCase.testGroup = { id: event.target.value };\n    this.setState({ testCase });\n  }\n\n  render() {\n    const labelStyle = {\n      fontWeight: 'bold'\n    };\n    return (\n      <form onSubmit={this.handleSubmit}>\n        {this.renderRedirect()}\n        <div className=\"divTable\">\n          <div className=\"divTableRow\">\n            <div className=\"divTableCell\"><span style={labelStyle}>Id:&nbsp;</span></div>\n            <div className=\"divTableCell\">{this.state.testCase.id}</div>\n          </div>\n          <div className=\"divTableRow\">\n            <div className=\"divTableCell\"><span style={labelStyle}>Test Source Id:&nbsp;</span></div>\n            <div className=\"divTableCell\">{this.state.testCase.testSourceId}</div>\n          </div>\n          <div className=\"divTableRow\">\n            <div className=\"divTableCell\"><span style={labelStyle}>Name:&nbsp;</span></div>\n            <div className=\"divTableCell\"><input type=\"text\" value={this.state.testCase.name} onChange={this.handleChange}></input></div>\n          </div>\n          <div className=\"divTableRow\">\n            <div className=\"divTableCell\"><span style={labelStyle}>Test Target:&nbsp;</span></div>\n            <div className=\"divTableCell\">\n              <select name=\"testTarget\" onChange={this.handleTargetChange} value={this.state.testCase.testTarget != null ? this.state.testCase.testTarget.id : null}>\n                <option> ----- </option>\n                {this.state.testTargets.map(testTarget => { return (<option value={testTarget.id}>{testTarget.microservice}</option>) })}\n              </select>\n            </div>\n          </div>\n          <div className=\"divTableRow\">\n            <div className=\"divTableCell\"><span style={labelStyle}>Test Group:&nbsp;</span></div>\n            <div className=\"divTableCell\">\n              <select name=\"testGroup\" onChange={this.handleGroupChange} value={this.state.testCase.testGroup != null ? this.state.testCase.testGroup.id : null}>\n                <option> ----- </option>\n                {this.state.testGroups.map(testGroup => { return (<option value={testGroup.id}>{testGroup.name}</option>) })}\n              </select>\n            </div>\n          </div>\n          <div className=\"divTableRow\">\n            <div className=\"divTableCell\"></div>\n            <div className=\"divTableCell\"><input type=\"submit\" name=\"submit\" value=\"Save\" /></div>\n          </div>\n        </div>\n      </form>\n    )\n  }\n}\n\nexport default TestCaseInfo;\n"]},"metadata":{},"sourceType":"module"}